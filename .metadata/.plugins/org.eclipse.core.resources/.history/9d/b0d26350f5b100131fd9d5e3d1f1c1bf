
import java.io.IOException;
import java.io.PrintStream;
import java.net.Socket;
import java.util.Scanner;

public class TrataCliente implements Runnable {
	 
	   private Socket cliente;
	 
	   public TrataCliente(Socket cliente) {
	     this.cliente = cliente;
	   }
	 
	   public void run() {

			Scanner scannerCliente = null;
			try {
				scannerCliente = new Scanner(this.cliente.getInputStream());
			} catch (IOException e) {
				System.out.println("Erro ao criar Scanner de Cliente!");
			}
			
			while (scannerCliente.hasNextLine()) {

				 // Verificar o IP do cliente e mardar ------------------------------------------------
				 String remetente = cliente.getInetAddress().getHostAddress(); // Salva ip do servidor em var remetente
				 
				 //Trata mensagem
				 Mensagens TratadorMensagens = new Mensagens();
				 
				 String mensagem = scannerCliente.nextLine();
				 TratadorMensagens.tratarMensagens(mensagem);
				 
				 
				 String msg = remetente + "|" + TratadorMensagens.getMensagemTratada();
				 // ---
				 
				 Socket Sdestino = null;
				 PrintStream PSdestino = null;
				 
				 try {
					   Sdestino = new Socket(TratadorMensagens.getIpDestino(), 7606);
					   PSdestino = new PrintStream(Sdestino.getOutputStream());
					   PSdestino.println(msg); //Envia a mensagem
				   } catch (IOException e) {
					   System.out.println("Não foi possivel estabelecer conexão com destinatario!");
				   }
				 
				 try {
					 // Destroi objetos por causa do loop infinito
					 Sdestino.close();
					 PSdestino.close();
				 } catch (IOException e) {
					 e.printStackTrace();
				 }
				
				 System.out.println(msg); //FIXME Mostra mensagem no servidor
			}
	   }
}