import java.io.IOException;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;


public class TrataEntrada implements Runnable {
	
	private ServerSocket SS;
	private Socket socketEntrada;
	
	public TrataEntrada(ServerSocket SS) { // Construtor
		this.SS = SS;
	}
	// FIXME corrigir loop
	public void run() {
		
		while (true) {
			
			try {
				socketEntrada = this.SS.accept();
			} catch (IOException e1) {
			}
			
			//PrintStream ps = new PrintStream(socketEntrada.getOutputStream());
			
			//---------------------------------- thread
			
			Scanner s = null;
			// Instancia imout strem
			try {
				s = new Scanner(socketEntrada.getInputStream());
			} catch (IOException e) {
			}
			
			while (s.hasNextLine()) {

				 // Varre linha para capturar ip de destino ---
				 /*
				 boolean pParte = true;
				 String ipDestino = "";
				 String mensagem = "";
				 
				 String sLinha = s.nextLine();  // "nextLine()" só pode ser usado uma vez
				 System.out.println("com destino = " + sLinha); //FIXME remover
				 
				 for(int i=0;i<(sLinha).length();i++){  
					   char c = (sLinha).charAt(i);
					   
					   if (c == '|') {
						   pParte = false;
					   }
					   else if (pParte) {
						   ipDestino = ipDestino + c;
					   }
					   else if (!pParte) {
						   mensagem = mensagem + c;
					   }
				 }  
				 
				 String msg = remetente + "|" + mensagem;
				 
				 System.out.println("com remetente = " + msg); //FIXME remover
				 
				 // Envia mensagem (seja o que Deus quiser) ---
				 
				//OpenLync.mandaMensagem(ipDestino, msg);
				 
				 //-------------------------------------------------------
				 Socket Sdestino = null;
				 PrintStream PSdestino = null;
				 
				 try {
					   Sdestino = new Socket(ipDestino, 7606);  // Cria uma porta acima para nao dar conflito
					   PSdestino = new PrintStream(Sdestino.getOutputStream());
					   PSdestino.println(msg); //Envia a bagaça
				   } catch (IOException e) {
					   System.out.println("Não foi possivel estabelecer conexão com destinatario!");
				   }
				 
				 try {
					Sdestino.close();
					PSdestino.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				 
				 
				*/
				String msg = s.nextLine();
				
				System.out.println(msg); // printa mensagem para teste

			 }
			 s.close();
		}
		
		
		/*
		
		// Cria scanner
		
		
		// Le mensagem quando enviada
		String mensagem;
		while (Sservidor.hasNextLine()) {
			try {
		    	this.socketEntrada = SS.accept();
		    } catch(IOException e) {
		    	System.out.println("Erro ao receber conexão do servidor! Socket");
		    }
		    
		    System.out.println("Conectou ao servidor! Socket OK");
			//-----
		    Scanner Sservidor = null;
			
			try {
				Sservidor = new Scanner(this.socketEntrada.getInputStream());
			} catch (IOException e) {
			}
			//------------------------------------------------------
			mensagem = Sservidor.nextLine();
			
			// Aqui acontece algo com a mensagem recebida -----------------------
			System.out.println(mensagem);
			
			//-------------------------------------------------------------------
			
		}
		
		Sservidor.close();
		*/
	}
	


}
